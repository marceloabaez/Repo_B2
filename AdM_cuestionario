Arquitectura de Microprocesadores
Alumno: Marcelo Aníbal Báez
Cohorte 19

PREGUNTAS ORIENTADORAS.

1) Describa brevemente los diferentes perfiles de familias de microprocesadores/
microcontroladores de ARM. Explique algunas de sus diferencias características.

La familia de microprocesadores y microcontroladores ARM se divide en 3 grandes grupos
actualmente, todos denominados Cortex (ésto último los distingue de la generación anterior).

Cortex M: Estos procesadores se especializan en sistemas embebidos, se caracterizan por su
bajo costo y consumo. Están pensados para integrar el corazón de microcontroladores de 32
bits

Cortex R: Procesadores orientados a aplicaciones de tiempo real y considerados críticos en 
cuanto a seguridad, donde se requiere un comportamiento determinístico del procesador en
cuanto a dar respuesta a eventos con deadlines estrictos.

Cortex A: Son los procesadores de mayor performance de ARM, diseñados para manejar sistemas
embebidos de alta performance, donde se prioriza la cantidad de información procesada sobre
la capacidad de atender rápidamente a una excepción, por ejemplo en aplicaciones multimedia.

CORTEX M.

1) Describa brevemente las diferencias entre las familias de procesadores Cortex 
M0, M3 y M4.


2) ¿Por qué se dice que el set de instrucciones Thumb permite mayor densidad de código?
Explique.

El set de instrucciones Thumb incluye operaciones tanto de 16 como de 32 bits. Al ser la
mayoría de las instrucciones simples de 16 bits, esto permite que los programas ocupen una
menor cantidad de memoria con respecto a la que ocuparían si fueran escritos en un set de
instrucciones puramente en 32bits (un 65% según la página de ARM).

3) ¿Qué entiende por arquitectura load-store? ¿Qué tipo de instrucciones no posee este
tipo de arquitectura?

La arquitectura load-store se refiere a una arquitectura para el set de instrucciones del
procesador. En ésta las instrucciones se dividen entre instrucciones de acceso a la memoria
(copiar información desde memoria a un registro o hacerlo de forma inversa) u operaciónes
realizadas por la ALU entre registros.

4) ¿Cómo es el mapa de memoria de la familia?

5) ¿Qué ventajas presenta el uso de los “shadowed pointers” del PSP y el MSP?

6) Describa los diferentes modos de privilegio y operación del Cortex M, sus relaciones y
como se conmuta de uno al otro. Describa un ejemplo en el que se pasa del modo
privilegiado a no priviligiado y nuevamente a privilegiado.

7) ¿Qué se entiende por modelo de registros ortogonal? Dé un ejemplo.

8) ¿Qué ventajas presenta el uso de intrucciones de ejecución condicional (IT)? Dé un
ejemplo.

9) Describa brevemente las excepciones más prioritarias (reset, NMI, Hardfault).

10) Describa las funciones principales de la pila. ¿Cómo resuelve la arquitectura el llamado
a funciones y su retorno?

11) Describa la secuencia de reset del microprocesador.

12) ¿Qué entiende por “core peripherals”? ¿Qué diferencia existe entre estos y el resto de
los periféricos?

13) ¿Cómo se implementan las prioridades de las interrupciones? Dé un ejemplo

14) ¿Qué es el CMSIS? ¿Qué función cumple? ¿Quién lo provee? ¿Qué ventajas aporta?

15) Cuando ocurre una interrupción, asumiendo que está habilitada ¿Cómo opera el
microprocesador para atender a la subrutina correspondiente? Explique con un ejemplo.

16) ¿Cómo cambia la operación de stacking al utilizar la unidad de punto flotante?

17) Explique las características avanzadas de atención a interrupciones: tail chaining y late
arrival.

18) ¿Qué es el systick? ¿Por qué puede afirmarse que su implementación favorece la
portabilidad de los sistemas operativos embebidos?

19) ¿Qué funciones cumple la unidad de protección de memoria (MPU)?

20) ¿Cuántas regiones pueden configurarse como máximo? ¿Qué ocurre en caso de haber
solapamientos de las regiones? ¿Qué ocurre con las zonas de memoria no cubiertas por las
regiones definidas?

21) ¿Para qué se suele utilizar la excepción PendSV? ¿Cómo se relaciona su uso con el resto
de las excepciones? Dé un ejemplo.

22) ¿Para qué se suele utilizar la excepción SVC? Expliquelo dentro de un marco de un
sistema operativo embebido.


ISA.

1) ¿Qué son los sufijos y para qué se los utiliza? Dé un ejemplo.

2) ¿Para qué se utiliza el sufijo ‘s’? Dé un ejemplo.

3) ¿Qué utilidad tiene la implementación de instrucciones de aritmética saturada? Dé un
ejemplo con operaciones con datos de 8 bits.

4) Describa brevemente la interfaz entre assembler y C ¿Cómo se reciben los argumentos
de las funciones? ¿Cómo se devuelve el resultado? ¿Qué registros deben guardarse en la
pila antes de ser modificados?

5) ¿Qué es una instrucción SIMD? ¿En qué se aplican y que ventajas reporta su uso? Dé un
ejemplo.
