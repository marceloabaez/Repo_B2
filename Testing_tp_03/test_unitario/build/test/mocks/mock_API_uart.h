/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_API_UART_H
#define _MOCK_API_UART_H

#include "unity.h"
#include "API_uart.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_API_uart_Init(void);
void mock_API_uart_Destroy(void);
void mock_API_uart_Verify(void);




#define uartInit_IgnoreAndReturn(cmock_retval) uartInit_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void uartInit_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
#define uartInit_StopIgnore() uartInit_CMockStopIgnore()
void uartInit_CMockStopIgnore(void);
#define uartInit_ExpectAndReturn(cmock_retval) uartInit_CMockExpectAndReturn(__LINE__, cmock_retval)
void uartInit_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
typedef bool_t (* CMOCK_uartInit_CALLBACK)(int cmock_num_calls);
void uartInit_AddCallback(CMOCK_uartInit_CALLBACK Callback);
void uartInit_Stub(CMOCK_uartInit_CALLBACK Callback);
#define uartInit_StubWithCallback uartInit_Stub
#define uartSendString_Ignore() uartSendString_CMockIgnore()
void uartSendString_CMockIgnore(void);
#define uartSendString_StopIgnore() uartSendString_CMockStopIgnore()
void uartSendString_CMockStopIgnore(void);
#define uartSendString_Expect(pstring) uartSendString_CMockExpect(__LINE__, pstring)
void uartSendString_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* pstring);
typedef void (* CMOCK_uartSendString_CALLBACK)(uint8_t* pstring, int cmock_num_calls);
void uartSendString_AddCallback(CMOCK_uartSendString_CALLBACK Callback);
void uartSendString_Stub(CMOCK_uartSendString_CALLBACK Callback);
#define uartSendString_StubWithCallback uartSendString_Stub
#define uartSendString_ReturnThruPtr_pstring(pstring) uartSendString_CMockReturnMemThruPtr_pstring(__LINE__, pstring, sizeof(uint8_t))
#define uartSendString_ReturnArrayThruPtr_pstring(pstring, cmock_len) uartSendString_CMockReturnMemThruPtr_pstring(__LINE__, pstring, cmock_len * sizeof(*pstring))
#define uartSendString_ReturnMemThruPtr_pstring(pstring, cmock_size) uartSendString_CMockReturnMemThruPtr_pstring(__LINE__, pstring, cmock_size)
void uartSendString_CMockReturnMemThruPtr_pstring(UNITY_LINE_TYPE cmock_line, uint8_t* pstring, size_t cmock_size);
#define uartSendString_IgnoreArg_pstring() uartSendString_CMockIgnoreArg_pstring(__LINE__)
void uartSendString_CMockIgnoreArg_pstring(UNITY_LINE_TYPE cmock_line);
#define uartSendStringSize_Ignore() uartSendStringSize_CMockIgnore()
void uartSendStringSize_CMockIgnore(void);
#define uartSendStringSize_StopIgnore() uartSendStringSize_CMockStopIgnore()
void uartSendStringSize_CMockStopIgnore(void);
#define uartSendStringSize_Expect(pstring, size) uartSendStringSize_CMockExpect(__LINE__, pstring, size)
void uartSendStringSize_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* pstring, uint16_t size);
typedef void (* CMOCK_uartSendStringSize_CALLBACK)(uint8_t* pstring, uint16_t size, int cmock_num_calls);
void uartSendStringSize_AddCallback(CMOCK_uartSendStringSize_CALLBACK Callback);
void uartSendStringSize_Stub(CMOCK_uartSendStringSize_CALLBACK Callback);
#define uartSendStringSize_StubWithCallback uartSendStringSize_Stub
#define uartSendStringSize_ReturnThruPtr_pstring(pstring) uartSendStringSize_CMockReturnMemThruPtr_pstring(__LINE__, pstring, sizeof(uint8_t))
#define uartSendStringSize_ReturnArrayThruPtr_pstring(pstring, cmock_len) uartSendStringSize_CMockReturnMemThruPtr_pstring(__LINE__, pstring, cmock_len * sizeof(*pstring))
#define uartSendStringSize_ReturnMemThruPtr_pstring(pstring, cmock_size) uartSendStringSize_CMockReturnMemThruPtr_pstring(__LINE__, pstring, cmock_size)
void uartSendStringSize_CMockReturnMemThruPtr_pstring(UNITY_LINE_TYPE cmock_line, uint8_t* pstring, size_t cmock_size);
#define uartSendStringSize_IgnoreArg_pstring() uartSendStringSize_CMockIgnoreArg_pstring(__LINE__)
void uartSendStringSize_CMockIgnoreArg_pstring(UNITY_LINE_TYPE cmock_line);
#define uartSendStringSize_IgnoreArg_size() uartSendStringSize_CMockIgnoreArg_size(__LINE__)
void uartSendStringSize_CMockIgnoreArg_size(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
